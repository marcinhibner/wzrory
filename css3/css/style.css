/*sposob zapisu kodu*/

body {
    background-color: lightblue;
}
 

SELEKTORY:
* - selektor uniwersalny
• p - selektor znacznika
• #identyfikator - selektor identyfikatora
• .klasa - selektor klasy
• li > a - selektor bezpośredniego potomka
• li a - selektor potomka
• p + a - selektor bezpośredniego rodzeństwa
• p ~ a - selektor rodzeństwa

SELEKTORY ATRYBUTOW: (najczęściej wykorzystuje się do nadania jednolitego wyglądu polom formularzy)
selector[att] 
selector[att="val"] 
selector[att~="val"] - ~ - Reprezentuje element mający atrybut att, którego wartość zawiera w sobie „val” (musi być on oddzielony spacją od pozostałych ciągów znaków). 
selector[att*="val"] - * - Reprezentuje element mający atrybut att, którego wartość zawiera przynajmniej jedno wystąpienie łańcucha „val”. 
selector[att^="val"] - ^ - Reprezentuje element mający atrybut att, którego wartość zaczyna się od łańcucha „val”. 
selector[att$="val"] - $ - Reprezentuje element mający atrybut att, którego wartość kończy się łańcuchem „val”. 


PSEUDO ELEMENTY (::)- Pseudo-elementy to są elementy, które nie istnieją w drzewie dokumentu
::before - dodanie tresci na poczatku zawartosci selektora
::after - dodanie tresci na koncu zawartosci selektora
::first-letter - zmiana wygladu pierwszej litery
::first-line - zmiana wygladu pierwszej lini


PSEUDO KLASY (:) - Pseudo-klasy wykorzystywane są do nadawania specjalnych właściwości elementom języka HTML.  Właściwości te są dodawane do elementów po wykonaniu określonej akcji użytkownika lub gdy element ma określone położenie w strukturze dokumentu. 
:link - wyglad nieodwiedzonych linkow
:visited - wyglad odwiedzonych linkow
:hover - wyglad elementu na ktory najedziemy kursorem
:active - wyglad elementu od momentu kliknięcia na niego lewym przyciskiem myszy, do momentu gdy ten przycisk zostanie puszczony
:focus - do aktualnie aktywnego elementu
:first-child - pierwszy zagniezdzony element
:last-child - osttani zagniezdzony element
:only-child - do wskazania kazdego elementu ktory jest jedynym dzieckiem swojego rodzica
:empty - element ktory nie posiada zawartosci
:nth-child() oraz :nth-last-child() - Służa do odszukania elementów (wg wzoru) będących dziećmi swojego rodzica. Rozpoczyna liczenie dzieci od pierwszego dziecka do ostatniego dziecka a last na odwrot. Wartosci even (parzyste) i odd (nie parzyste), liczba (wyszuka konkretne dziecko)
Wzor an+b - (a - co jaka liczbe ma wskazywac dzieci, b - od ktorego dziecka ma liczyc)


POZYCJONOWANIE:
position:

-static - Domyślna pozycja nie pozwalająca na zmianę położenia elementu względem innych
elemntów

-relative - Pozwala na ustalenie pozycji za pomocą właściwości top, bottom, left, right wzgledem
elementu nadrzednego. Pozycja elementu nie zmienia położenia innych elementów. 

-absolute - Pozwala na ustalenie pozycji za pomocą właściwości top, bottom, left, right wzgledem
elementu nadrzednego, który znajduje się w pozycji relatynwej. Element w pozycji
absolutnej robi miejsce innym elementom w danym kontenerze

-fixed - Pozwala na ustalenie pozycji za pomocą właściwości top, bottom, left, right wzgledem
okna przeglądarki. Element ma stałą pozycję względem okna przeglądaki. 


JEDNOSTKI:
font-size:

Absolutne (Używa ich się wtedy gdy chcemy aby wybrany element zajmował taki sam obszar na
ekranie niezależnie od wielkości i rozdzielczości monitora)

px - piksele
cm - centymetry
mm - milimetry
in - cale
pt - punkty
pc - pica

Relatywne (Stosuje się je wtedy gdy chcemy odwołać się do rozmiaru innego elementu lub
rozmiaru okna użytkownika. Jednostki względne podają długość w odniesieniu do
innego rozmiaru. Używane są jeśli chcemy zachować proporcje wyświetlania różnych
elementów. )

em - wysokość aktualnej czcionki 
rem - wysokość czcionki elementu korzenia w drzewie dokumentu (element <html>)
% - procenty - procentowa wielkość odpowiedniej własności elementu rodzica
vw - viewport width - procentowa szerokość obszaru wyświetlania
vh - viewport height - procentowa wysokość obszaru wyświetlania 
vmin - viewport minimum - mniejsza z wartości vw lub vh
vmax - viewport maximum - większa z wartości vw lub vh


KOLORY:
background-color - kolor tla
color - kolor czcionki

• kolory predefiniowane - 140 kolorow

• zapis heksadecymalny - #00FFFF (00-czerwony, FF-zielony, FF-niebieski)
Za pomocą znaków: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F nadaje się intensywność
danej barwie. Litery od A do F oznaczają liczby od 10 do 15

• skrócony zapis heksadecymalny - jeżeli każda z barw będzie składała się z dwóch takich samych znaków

• zapis rgb - Po literach rgb, w nawiasie znajdują się trzy liczby określające intensywność kolejno
barw: czerwonej, zielonej, niebieskiej. Liczby te oddzielone są od siebie przecinkami i
każda z nich znajduje się w zakresie od 0 do 255. Możemy użyć też zapisu
procentowego od 0% do 100%. 

• zapis rgba - wymaga on dodatkowego parametru określającego stopień przeźroczystości. Do określenia stopnia przezroczystości używa się liczb dziesiętnych z zakresu 0 - 1.0,
przy czym wartość 1.0 oznacza pełne krycie, a 0 pełną przezroczystość.  


WYSWIETLANIE ELEMENTOW:
Elementy liniowe - Elementy liniowe to takie elementy, które domyślnie wyświetlane są w jednej linii (obok siebie). span, a. Domyślna przestrzeń (wysokość i szerokość) jaką zajmuje element wyświetlany w linii jest uzależniona od zawartości jaka się w nim znajdzie. Elementy liniowe traktowane sa jak tekst. Wyśrodkowanie elementu liniowego jest możliwe, jeżeli do elementu rodzica, który jest elementem blokowym, zostanie dodana właściwość text-align:center 
Ponadto niektóre właściwości CSS nie mają zastosowania do elementów liniowych. Tymi właściwościami są, np. width oraz height 

Elementy blokowe - to takie elementy, które domyślnie wyświetlane są jeden pod drugim. div, p, h. Przestrzeń jaką zajmuje element blokowy jest uzależniona od szerokości jego elementu rodzica, domyślnie jest to 100% szerokości rodzica. 

display:
block - Element HTML będzie wyświetlany w bloku (jeden pod drugim). 

inline - Element HTML będzie wyświetlany w linii (jeden obok drugiego).

inline-block - Element HTML będzie interpretowany przez przeglądarkę internetową jako element liniowy, lecz z zachowaniem pewnych cech elementu blokowego, dzięki czemu takie właściwości jak: padding, margin, width czy height będą na niego oddziaływały jak na normalny element blokowy.

none - Element nie będzie wyświetlany. 



OPLYWANIE ELEMENTOW:
float:
Właściwość float określa czy element powinien być opływany i z której strony. Właściwość clear używamy do kontroli opływania elementów HTML. 



EFEKT PRZEJSCIA:
transition:
Właściwość transition pozwala utworzyć pewien efekt animacji, ktora zmieni wartości właściwości CSS dla elementu HTML. Zmiany dokonuja się skokowo.

Wlasciwosci efektu:
transition-property - określa, jaka własność stylu ma podlegać efektowi przejścia (all, none, wybrana wlasciwosc)

transition-duration - określa, czas trwania efektu przejścia (s v ms)

transition-delay - określa, czas opóźnienie efektu przejścia (s v ms + opoznienie -+0)

transition-timing-function - określa, tempo efektu przejścia
-linear - stałe tempo efektu przejścia 
-ease-in - wolniejsze tempo efektu przejścia na początku 
-ease-out - wolniejsze tempo efektu przejścia na końcu 
-ease-in-out - wolniejsze tempo efektu przejścia na początku oraz na końcu 
-steps() - ilość klatek animacji efektu przejścia określona za pomocą funkcji steps() 
-step-start - stałe tempo efektu przejścia z pominięciem pierwszej klatki 
-step-end - stałe tempo efektu przejścia z pominięciem ostatniej klatki 
-ease - efekt przejścia będzie miał wolniejszy start, lecz później przyspieszy, a następnie zwolni tempo przed zakończeniem swojego czasu wykonywania się - wartość domyślna

transition - służy do zapisania wszystkich zaprezentowanych właściwości efektu transition za pomocą jednej reguły 
•  skrótowy zapis wszystkich właściwości efektu transition, w kolejności: property, duration, timing function, delay 
Zarówno własności transition-* jak i skrótowa własność transition mogą  przyjmować wiele wartości równolegle.



WLASCIWOSCI TLA:
background-color: Kolor tła danego elementu
-color -  określenie własnej wartości  koloru tła elementu 
-transparent - przezroczyste tło  wartość domyślna 
-initial - ustawienie wartości domyślnej przeglądarki 
-inherit - dziedzicz po rodzicu

background-image: Wypełnienie tła elementu obrazkiem w formacie np. .jpg, .png, .gif. Za pomocą tej właściwości możemy wypełnić tło gradientem. 
-none – żadna grafika nie jest wyświetlana  wartość domyślna 
-url() – ścieżka do grafiki tła 
-initial – ustawienie wartości domyślnej
-inherit – dziedzicz po rodzicu
-funkcje gradientowe – np. linear-gradient(red, yellow); 

background-repeat: Określa sposób powtarzania się obrazka w tle elementu
-repeat – grafika powtarzana w pionie oraz poziomie 
-repeat-x – grafika powtarzana w poziomie 
-repeat-y – grafika powtarzana w pionie 
-no-repeat – grafika nie jest powtarzane 
-initial – ustawienie wartości domyślnej 
-inherit – dziedzicz po rodzicu

background-position: Określa pozycję obrazka w tle elementu. 
-left/center/right top/center/bottom – wyrównanie według wskazanych parametrów – jeśli podana jest tylko jedna wartość druga ustawiana jest na center 
-x% y% – pozycja tła w procentach – wartość domyślna 0% 0% 
-x y – pozycja tła w jednostkach długości 
-no-repeat – grafika nie jest powtarzane 
-initial – przywrócenie wartości domyślnej przeglądarki 
-inherit – dziedzicz po rodzicu 

background-attachment: Określa w jaki sposób ma zachowywać się tło obrazkowe w danym elemencie, w momencie gdy będziemy przewijać zawartość strony za pomocą suwaków przeglądarki internetowej lub w momencie gdy będziemy przewijać zawartość danego elementu za pomocą suwaków. 
-scroll – tło elementu będzie się przewijać wraz z tym elementem – wartość domyślna 
-fixed – grafika tła nieruchoma względem okna przeglądarki 
-local – grafika tła przewija się wraz z zawartością elementu 
-initial – przywrócenie wartości domyślnej przeglądarki 
-inherit – dziedzicz po rodzicu 

background-size: Określa rozmiar obrazka w tle elementu. 
-auto – rzeczywiste wymiary obrazka – wartość domyślna 
-szer wys – szerokość i wysokość tła obrazka w jednostkach miary (np. px), jeśli ustawiona jest tylko jedna wartość druga ustawiona jest na auto 
-szer% wys% – szerokość i wysokość tła obrazka w procentach rozmiaru elementu nadrzędnego, jeśli ustawiona jest tylko jedna wartość druga ustawiona jest na auto 
-cover – skalowanie grafiki tła elementu aby cały element został wypełniony grafiką. Zostają zachowane proporcje grafiki. Część grafiki nie będzie widoczna, jeśli szerokość i wysokość elementu nie są proporcjonalne do rozmiarów grafiki 
-contain – skalowanie grafiki tła elementu aby cała grafika była widoczna. Zostają zachowane proporcje grafiki. Część elementu nie będzie wypełniona grafiką jeśli rozmiar tła i grafiki się nie pokrywają 
-initial – przywrócenie wartości domyślnej przeglądarki 
-inherit – dziedzicz po rodzicu 

background:  służy do zapisania wszystkich zaprezentowanych właściwości tła za pomocą jednej reguły 



PRZEPELNIENIE ELEMENTU (SCROLL):
Jeżeli zawartość elementu nie mieści się w jego rozmiarach możliwe jest ukrycie nadmiarowej zawartość, pokazanie wszystkiego poprzez powiększenie rozmiarów elementu (bez względu na parametry width i height) albo utworzenie suwaków do przewijania przepełnionej treści. Służy do tego właściwość CSS – overflow, overflow-x oraz overflow-y. 
Właściwości te działają tylko dla elementów blokowych z określoną wysokością. 

-scroll – dodanie suwaków do elementu, nawet jeśli zawartość mieści się w elemencie 
-hidden – ukrycie niemieszczącej się zawartości elementu 
-auto – dodanie suwaków do elementu gdy zawartość nie będzie się mieścić 
-visible – niemieszcząca się zawartość elementu pozostanie widoczna – wartość domyślna 
-initial – przywrócenie wartości domyślnej przeglądarki 
-inherit – dziedzicz po rodzicu 

overflow - Ustala jak ma zachować się element gdy jego zawartość nie będzie się mieścić w granicach jego rozmiaru (wysokość i szerokość). 

overflow-x - Ustala jak ma zachować się element gdy jego zawartość nie będzie się mieściła w granicy jego szerokości. 

overflow-y - Ustala jak ma zachować się element gdy jego zawartość nie będzie się mieściła w granicy jego wysokości. 



ROZMIAR ELEMENTU:
Aby określić konkretną szerokość elementu HTML używa się właściwości CSS - width, a do określenia konkretnej wysokości elementu HTML - właściwości CSS height.

Niektóre właściwości CSS mają wpływ na końcowy rozmiar elementu (szerokość oraz wysokość), obliczany przez przeglądarkę internetową. Właściwości te to: padding, margin, border, line-height. 

Za pomocą właściwości box-sizing możemy ustalić czy właściwości border oraz padding mają wpływać na całkowitą szerokość i wysokość elementu, które są obliczane przez przeglądarkę internetową. 

-border-box – właściwości padding oraz border nie mają wpływu na ustalony rozmiar elementu 
-content-box – właściwości padding oraz border zmieniają ustalony rozmiar elementu – wartość domyślna 
-initial – przywrócenie wartości domyślnej przeglądarki 
-inherit – dziedzicz po rodzicu 



RESPONSYWNOSC:
W celu uzyskania efektu automatycznego skalowania i odpowiedniej szerokości obrazu na urządzeniach mobilnych używamy metatagu viewport, który umieszczamy w nagłówku strony <head> 

<meta name="viewport" content= "width=device-width, initial-scale=1.0" >

Wartość atrybutu content definiuje: 
-Wyjściową szerokość strony - width=device-width – szerokość wyświetlacza urządzenia 
-Wyjściowe powiększenie - initial-scale=1.0 – domyślne powiększenie 

Aby stworzyć responsywną stronę internetową (RWD) czyli stronę, która będzie dobrze wyglądać zarówno na laptopach i na urządzeniach mobilnych,  możemy użyć reguł @media queries. 
    
Reguły @media queries służą do definiowania różnych właściwości CSS dla różnych typów mediów/urządzeń/rozdzielczości. 

width / height 
min-width / min-height 
max-width / max-height 

Określa reguły CSS, które zostaną aktywowane tylko wtedy, gdy szerokość/ wysokość okna przeglądarki internetowej będzie miała określoną wartość, lub gdy będzie większa niż podana wartość, lub gdy będzie mniejsza niż podana wartość. 
np. @media (min-width:800px) and (max-width:1200px) 
    
device-width / device-height 
min-device-width / min-device-height 
max-device-width / max-device-height 
    
Określa reguły CSS, które zostaną aktywowane tylko wtedy, gdy szerokość/ wysokość rozdzielczości ekranu urządzenia będzie miała określoną wartość, lub gdy będzie większa niż podana wartość, lub gdy będzie mniejsza niż podana wartość. 
    
orientation - Określa reguły CSS, które zostaną aktywowane tylko wtedy, gdy szerokość okna przeglądarki internetowej będzie miała wartość mniejszą lub większą niż wysokość okna przeglądarki internetowej. 
Cecha orientation pomaga nam wykryć w jakiej orientacji, pionowej (portrait) czy poziomej (landscape), została wyświetlona nasza strona internetowa. 
np. @media (orientation:landscape) 
    
wybrane oznaczenia typów mediów:
all – dla wszystkich mediów 
screen – dla komputerów, tabletów, smartfonów itp. 
print – dla drukarek 
speech – dla czytników ekranu
    
np. @media screen, tv { 

operatory logiczne dla reguł @media queries:
and - operator ten łączy różne właściwości w regule @media 
np. @media all and (
    
not - operator ten umożliwia zaprzeczenia danego zapisu 
np. @media not screen { 
    
przecinek (,) - operator ten umożliwia stworzenie jednego zapisu reguły @media, z różnym właściwościami dla różnych typów urządzeń 
np. @media all, screen, tv {
    
    
    
TRANSFORM - ROTACJA:
Obracanie elementu możliwe jest dzięki funkcji rotate(). Jako właściwość przekazujemy kąt obrotu elementu (również z wartościami ujemnymi) 
Obraz jest obracany względem jego środka, który jest domyślnym punktem odniesienia dla wszystkich transformacji.     
np. transform: rotate(20deg); 
    
TRANSFORM - PRZESUNIECIE:
-translateX – funkcja przesuwa element w osi poziomej  
-translateY – funkcja przesuwa element w osi pionowej skrótowa funkcja 
-translate łączy wartości obu poprzednich - translate(translateX, translateY)     
np. transform: translate(200px, 100px);   
    
TRANSFORM - SKALOWANIE:
-scaleX – skalowanie w poziomie 
-scaleY – skalowanie w pionie  
-scale – funkcja skrótowa 

Wartość tej funkcji to liczba rzeczywista bez określonej jednostki określająca współczynnik skalowania.
np. transform: scale(1.5); 
    
    
EFEKTY ANIMACJI:
Właściwość animation pozwala utworzyć efekt pełnej animacji (plynnej).   
-animation-name – nazwa reguły @keyframes , która ma być wykorzystana do animacji elementu,
-animation-duration – czas trwania animacji w (s v ms)
-animation-timing-function – określa, w jaki sposób animacja przechodzi przez klatki kluczowe 
    (linear - stałe tempo efektu animacji 
    ease-in - wolniejsze tempo efektu animacji na początku 
    ease-out - wolniejsze tempo efektu animacji na końcu 
    ease-in-out - wolniejsze tempo efektu animacji na początku oraz na końcu 
    ease - efekt animacji będzie miał wolniejszy start, lecz później przyspieszy, a następnie zwolni tempo przed zakończeniem swojego czasu wykonywania się - wartość domyślna  )
-animation-iteration-count – liczba powtórzeń animacji w (liczby naturalne – określają ilość powtórzeń v infinite - animacja powtarza się cały czas) 
    
Reguła @keyframes określa stan początkowy i końcowy animacji lub procentowe rozmieszenie klatek animacji 
np.   @keyframes nazwa_animacji {     
    from v % {     
        // Początek animacji     
    }     
    to v % {     
        // Koniec animacji       
    }   
}
    
    
    
    
    
LINKI:
-Hierarchia selektorów CSS 
http://cssspecificity.com/ 
    
-Kalkulator hierarchii selektorów 
https://specificity.keegan.st/ 
    
-Kolejnym narzędziem, które może wykorzystać Front-End Developer do pracy jest https://repl.it 
Pozwala stworzenie w przeglądarce bloku kodu HTML, arkusza styli CSS oraz dodanie skryptów JavaScript. 
Dzięki temu możemy pokazać nasz kod innym programistom.
    
-Narzędzia, które ułatwiają działanie w zakresie definiowania kolorów oraz strony poświęcone kolorom i paletą kolorów: 
    •  http://www.color-hex.com   
    •  http://www.colourlovers.com   
    •  http://colorschemedesigner.com  
    •  http://color.adobe.com  
    
-O szczegółach modyfikowania CSS w narzędziach developerkich przeczytasz w tym artykule  
https://developers.google.com/web/tools/chrome-devtools/iterate/ inspect-styles/edit-styles
https://developers.google.com/web/tools/chrome-devtools/
    
-Nad standardem języka CSS czuwa organizacja W3C. Oficjalana dokumentacja CSS przygotowana przez W3C jest dostępna pod linkiem: 
https://www.w3.org/TR/2001/WD-css3-roadmap-20010523/ 